
module data_source_dac(

	input clock,
	input reset,
	input CE,
	
	output zero_cross,
	output reg data_valid,
	output [31:0] data
);

parameter M=256; 	// Cantidad de puntos por ciclo de señal

parameter interval=2048/M;

parameter delay=0;		// El modulo saca una muestra cada delay+1 ciclos de señal

reg [15:0] buffer [0:2047];
	initial	$readmemh("LU_Tables/x2048_14b.mem",buffer);

reg [15:0] data_out_reg; initial data_out_reg = 0;
	
assign data = data_out_reg;

reg [15:0] index; initial index = 0;

reg [15:0] counter; initial counter = 0;

reg en_reg; always @ (posedge clock) 	en_reg <= CE;


//Manda un dato cada delay+1 ciclos de reloj
always @ (posedge clock or negedge reset)
begin

	
	if(!reset) 
	begin 
		index <= 0; 
		counter <= 0; 
		data_valid <= 0;
		data_out_reg<=0; 
	end
	else	
	begin
		if(en_reg) 
		begin				
			counter <= counter+1;
		
			if(counter==delay)
			begin
				index <= (index == (M-1))? 0: index+1 ;	
				data_out_reg <= buffer[index*interval];
				data_valid <= 1;
				counter <= 0;
			end
			
		end
	end
	


end

assign zero_cross = (index == 0) && (CE) && (data_valid);

endmodule